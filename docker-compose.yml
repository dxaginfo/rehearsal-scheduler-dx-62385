version: '3.8'

services:
  # Backend API service
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DATABASE_URL=postgres://postgres:postgres@db:5432/rehearsal_scheduler
      - JWT_SECRET=${JWT_SECRET}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - db
      - redis
    restart: always
    volumes:
      - ./server:/app
      - /app/node_modules

  # Frontend client service
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5000/api
    ports:
      - "3000:80"
    depends_on:
      - server
    restart: always

  # PostgreSQL database
  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=rehearsal_scheduler
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/db/migrations:/docker-entrypoint-initdb.d
    restart: always

  # Redis for caching and session management
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: